{"ast":null,"code":"var _jsxFileName = \"/Users/ajeet/Web Dev/Expense Tracker/frontend/src/Components/Chart/Chart.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Chart as ChartJs, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement, Filler } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport styled from 'styled-components';\nimport { useGlobalContext } from '../../context/globalContext';\nimport { dateFormat } from '../../utils/dateFormat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJs.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement, Filler);\nfunction Chart() {\n  _s();\n  const {\n    incomes,\n    expenses\n  } = useGlobalContext();\n\n  // Sorting incomes and expenses by date in ascending order\n  const sortedIncomes = [...incomes].sort((a, b) => new Date(a.date) - new Date(b.date));\n  const sortedExpenses = [...expenses].sort((a, b) => new Date(a.date) - new Date(b.date));\n  const data = {\n    labels: sortedIncomes.map(inc => dateFormat(inc.date)),\n    // Using sorted data\n    datasets: [{\n      label: 'Income',\n      data: sortedIncomes.map(income => income.amount),\n      borderColor: 'rgba(0, 128, 0, 0.8)',\n      backgroundColor: 'rgba(0, 98, 0, 0.3)',\n      pointBackgroundColor: '#008000',\n      borderWidth: 2,\n      pointRadius: 5,\n      fill: true,\n      tension: 0.4\n    }, {\n      label: 'Expenses',\n      data: sortedExpenses.map(expense => expense.amount),\n      borderColor: 'rgba(255, 0, 0, 0.8)',\n      backgroundColor: 'rgba(163, 0, 0, 0.3)',\n      pointBackgroundColor: '#ff0000',\n      borderWidth: 2,\n      pointRadius: 5,\n      fill: true,\n      tension: 0.4\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(ChartStyled, {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(Chart, \"PHep46UhTemPLuSa3MfIkZAuTiE=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Chart;\nconst ChartStyled = styled.div`\n    background: #fff;\n    border: 2px solid #ff00ff;\n    box-shadow: 0px 0px 15px rgba(255, 0, 255, 0.6);\n    padding: 1.5rem;\n    border-radius: 12px;\n    height: 100%;\n    \n    canvas {\n        max-width: 100%;\n        height: auto !important;\n    }\n`;\n_c2 = ChartStyled;\nexport default Chart;\nvar _c, _c2;\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"ChartStyled\");","map":{"version":3,"names":["React","Chart","ChartJs","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","Filler","Line","styled","useGlobalContext","dateFormat","jsxDEV","_jsxDEV","register","_s","incomes","expenses","sortedIncomes","sort","a","b","Date","date","sortedExpenses","data","labels","map","inc","datasets","label","income","amount","borderColor","backgroundColor","pointBackgroundColor","borderWidth","pointRadius","fill","tension","expense","ChartStyled","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","_c2","$RefreshReg$"],"sources":["/Users/ajeet/Web Dev/Expense Tracker/frontend/src/Components/Chart/Chart.js"],"sourcesContent":["import React from 'react'\nimport { Chart as ChartJs, \n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    ArcElement,\n    Filler\n} from 'chart.js'\n\nimport { Line } from 'react-chartjs-2'\nimport styled from 'styled-components'\nimport { useGlobalContext } from '../../context/globalContext'\nimport { dateFormat } from '../../utils/dateFormat'\n\nChartJs.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    ArcElement,\n    Filler\n)\n\nfunction Chart() {\n    const { incomes, expenses } = useGlobalContext()\n\n    // Sorting incomes and expenses by date in ascending order\n    const sortedIncomes = [...incomes].sort((a, b) => new Date(a.date) - new Date(b.date));\n    const sortedExpenses = [...expenses].sort((a, b) => new Date(a.date) - new Date(b.date));\n\n    const data = {\n        labels: sortedIncomes.map((inc) => dateFormat(inc.date)), // Using sorted data\n        datasets: [\n            {\n                label: 'Income',\n                data: sortedIncomes.map((income) => income.amount),\n                borderColor: 'rgba(0, 128, 0, 0.8)',\n                backgroundColor: 'rgba(0, 98, 0, 0.3)',\n                pointBackgroundColor: '#008000',\n                borderWidth: 2,\n                pointRadius: 5,\n                fill: true,\n                tension: 0.4\n            },\n            {\n                label: 'Expenses',\n                data: sortedExpenses.map((expense) => expense.amount),\n                borderColor: 'rgba(255, 0, 0, 0.8)',\n                backgroundColor: 'rgba(163, 0, 0, 0.3)',\n                pointBackgroundColor: '#ff0000',\n                borderWidth: 2,\n                pointRadius: 5,\n                fill: true,\n                tension: 0.4\n            }\n        ]\n    }\n\n    return (\n        <ChartStyled>\n            <Line data={data} />\n        </ChartStyled>\n    )\n}\n\nconst ChartStyled = styled.div`\n    background: #fff;\n    border: 2px solid #ff00ff;\n    box-shadow: 0px 0px 15px rgba(255, 0, 255, 0.6);\n    padding: 1.5rem;\n    border-radius: 12px;\n    height: 100%;\n    \n    canvas {\n        max-width: 100%;\n        height: auto !important;\n    }\n`;\n\nexport default Chart\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}