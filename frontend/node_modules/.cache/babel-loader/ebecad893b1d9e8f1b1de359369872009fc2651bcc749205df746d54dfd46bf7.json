{"ast":null,"code":"var _jsxFileName = \"/Users/ajeet/Web Dev/Expense Tracker/frontend/src/Components/Chart/Chart.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Chart as ChartJs, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement, Filler } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport styled from 'styled-components';\nimport { useGlobalContext } from '../../context/globalContext';\nimport { dateFormat } from '../../utils/dateFormat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJs.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement, Filler);\nfunction Chart() {\n  _s();\n  const {\n    incomes,\n    expenses\n  } = useGlobalContext();\n\n  // Merge all unique dates from incomes and expenses\n  const allDates = [...new Set([...incomes.map(inc => inc.date), ...expenses.map(exp => exp.date)])].sort((a, b) => new Date(a) - new Date(b));\n\n  // Ensure data points align correctly with the x-axis labels\n  const incomeData = allDates.map((date, index) => {\n    if (index === 0) return 0;\n    const income = incomes.find(inc => inc.date === date);\n    return income ? income.amount : incomeData[index - 1]; // Use 0 if no income on that date\n  });\n  const expenseData = allDates.map((date, index) => {\n    if (index === 0) return 0;\n    const expense = expenses.find(exp => exp.date === date);\n    return expense ? expense.amount : expenseData[index - 1]; // Use 0 if no expense on that date\n  });\n  const data = {\n    labels: allDates.map(date => dateFormat(date)),\n    // X-axis dates\n    datasets: [{\n      label: 'Income',\n      data: incomeData,\n      borderColor: 'rgba(0, 128, 0, 0.8)',\n      backgroundColor: 'rgba(0, 98, 0, 0.3)',\n      pointBackgroundColor: '#008000',\n      borderWidth: 2,\n      pointRadius: 5,\n      fill: true,\n      tension: 0.4\n    }, {\n      label: 'Expenses',\n      data: expenseData,\n      borderColor: 'rgba(255, 0, 0, 0.8)',\n      backgroundColor: 'rgba(163, 0, 0, 0.3)',\n      pointBackgroundColor: '#ff0000',\n      borderWidth: 2,\n      pointRadius: 5,\n      fill: true,\n      tension: 0.4\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(ChartStyled, {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(Chart, \"PHep46UhTemPLuSa3MfIkZAuTiE=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Chart;\nconst ChartStyled = styled.div`\n    background: #fff;\n    border: 2px solid #ff00ff;\n    box-shadow: 0px 0px 15px rgba(255, 0, 255, 0.6);\n    padding: 1.5rem;\n    border-radius: 12px;\n    height: 100%;\n    \n    canvas {\n        max-width: 100%;\n        height: auto !important;\n    }\n`;\n_c2 = ChartStyled;\nexport default Chart;\nvar _c, _c2;\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"ChartStyled\");","map":{"version":3,"names":["React","Chart","ChartJs","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","Filler","Line","styled","useGlobalContext","dateFormat","jsxDEV","_jsxDEV","register","_s","incomes","expenses","allDates","Set","map","inc","date","exp","sort","a","b","Date","incomeData","index","income","find","amount","expenseData","expense","data","labels","datasets","label","borderColor","backgroundColor","pointBackgroundColor","borderWidth","pointRadius","fill","tension","ChartStyled","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","_c2","$RefreshReg$"],"sources":["/Users/ajeet/Web Dev/Expense Tracker/frontend/src/Components/Chart/Chart.js"],"sourcesContent":["import React from 'react'\nimport { Chart as ChartJs, \n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    ArcElement,\n    Filler\n} from 'chart.js'\n\nimport { Line } from 'react-chartjs-2'\nimport styled from 'styled-components'\nimport { useGlobalContext } from '../../context/globalContext'\nimport { dateFormat } from '../../utils/dateFormat'\n\nChartJs.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    ArcElement,\n    Filler\n)\n\nfunction Chart() {\n    const { incomes, expenses } = useGlobalContext()\n\n    // Merge all unique dates from incomes and expenses\n    const allDates = [...new Set([\n        ...incomes.map(inc => inc.date),\n        ...expenses.map(exp => exp.date)\n    ])].sort((a, b) => new Date(a) - new Date(b));\n\n    // Ensure data points align correctly with the x-axis labels\n    const incomeData = allDates.map((date, index) => {\n        if (index === 0) return 0;\n        const income = incomes.find(inc => inc.date === date);\n        return income ? income.amount : incomeData[index - 1]; // Use 0 if no income on that date\n    });\n\n    const expenseData = allDates.map((date, index) => {\n        if (index === 0) return 0;\n        const expense = expenses.find(exp => exp.date === date);\n        return expense ? expense.amount : expenseData[index - 1]; // Use 0 if no expense on that date\n    });\n\n    const data = {\n        labels: allDates.map(date => dateFormat(date)), // X-axis dates\n        datasets: [\n            {\n                label: 'Income',\n                data: incomeData,\n                borderColor: 'rgba(0, 128, 0, 0.8)',\n                backgroundColor: 'rgba(0, 98, 0, 0.3)',\n                pointBackgroundColor: '#008000',\n                borderWidth: 2,\n                pointRadius: 5,\n                fill: true,\n                tension: 0.4\n            },\n            {\n                label: 'Expenses',\n                data: expenseData,\n                borderColor: 'rgba(255, 0, 0, 0.8)',\n                backgroundColor: 'rgba(163, 0, 0, 0.3)',\n                pointBackgroundColor: '#ff0000',\n                borderWidth: 2,\n                pointRadius: 5,\n                fill: true,\n                tension: 0.4\n            }\n        ]\n    }\n\n    return (\n        <ChartStyled>\n            <Line data={data} />\n        </ChartStyled>\n    )\n}\n\nconst ChartStyled = styled.div`\n    background: #fff;\n    border: 2px solid #ff00ff;\n    box-shadow: 0px 0px 15px rgba(255, 0, 255, 0.6);\n    padding: 1.5rem;\n    border-radius: 12px;\n    height: 100%;\n    \n    canvas {\n        max-width: 100%;\n        height: auto !important;\n    }\n`;\n\nexport default Chart\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}